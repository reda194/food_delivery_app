// Mocks generated by Mockito 5.4.4 from annotations
// in food_delivery_app/test/core/services/fcm_integration_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:dartz/dartz.dart' as _i5;
import 'package:food_delivery_app/core/errors/failures.dart' as _i6;
import 'package:food_delivery_app/features/notifications/data/datasources/notifications_remote_datasource.dart'
    as _i2;
import 'package:food_delivery_app/features/notifications/data/models/notification_model.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NotificationsRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationsRemoteDataSource extends _i1.Mock
    implements _i2.NotificationsRemoteDataSource {
  MockNotificationsRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.NotificationModel>> getNotifications({
    required String? userId,
    int? limit = 50,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotifications,
          [],
          {
            #userId: userId,
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i3.Future<List<_i4.NotificationModel>>.value(
            <_i4.NotificationModel>[]),
      ) as _i3.Future<List<_i4.NotificationModel>>);

  @override
  _i3.Future<int> getUnreadCount(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #getUnreadCount,
          [userId],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<void> markAsRead(String? notificationId) => (super.noSuchMethod(
        Invocation.method(
          #markAsRead,
          [notificationId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> markAllAsRead(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #markAllAsRead,
          [userId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteNotification(String? notificationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteNotification,
          [notificationId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteAllNotifications(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAllNotifications,
          [userId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Stream<
      _i5.Either<_i6.Failure, _i4.NotificationModel>> subscribeToNotifications(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #subscribeToNotifications,
          [userId],
        ),
        returnValue:
            _i3.Stream<_i5.Either<_i6.Failure, _i4.NotificationModel>>.empty(),
      ) as _i3.Stream<_i5.Either<_i6.Failure, _i4.NotificationModel>>);

  @override
  _i3.Future<void> saveFcmToken(
    String? userId,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFcmToken,
          [
            userId,
            token,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteFcmToken(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #deleteFcmToken,
          [userId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
